@use "../../styles/variables.scss" as *;

.explorer {
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  width: 100%;
  min-height: 1.2rem;
  flex: 0 1 auto;
  padding: 0.75rem 0.85rem;
  border: 1px solid var(--lightgray);
  border-radius: 10px;
  background: color-mix(in srgb, var(--light) 85%, rgba(0, 0, 0, 0.03));
  transition: border-color 0.2s ease;
  overflow: hidden;

  &:hover {
    border-color: var(--secondary);
  }

  &.collapsed {
    flex: 0 0 auto;

    & .fold {
      transform: rotateZ(-90deg);
    }

    & > .explorer-content {
      max-height: 0;
      opacity: 0;
      margin-top: 0;
      pointer-events: none;
    }
  }

  .mobile-explorer.hide-until-loaded + .desktop-explorer + .explorer-content,
  .mobile-explorer.hide-until-loaded ~ .explorer-content {
    display: none;
  }

  & .fold {
    margin-left: 0.5rem;
    transition: transform 0.3s ease;
    opacity: 0.8;
  }

  button.mobile-explorer {
    display: none;
  }

  button.desktop-explorer {
    display: flex;
  }

  @media all and ($mobile) {
    padding: 0.55rem 0.65rem;
    border-radius: 12px;
    width: min(calc(100vw - 3rem), 20rem);
    max-width: 100%;
    overflow: visible;

    button.mobile-explorer {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      width: auto;
      padding: 0.35rem 0.6rem;
      border-radius: 999px;
      border: none;
      background: transparent;

      .lucide-menu {
        stroke: var(--tertiary);
      }
    }

    button.desktop-explorer {
      display: none;
    }
  }
}

.explorer.desktop-only {
  @media all and not ($mobile) {
    display: flex;
  }
}

.explorer svg {
  pointer-events: all;
  transition: transform 0.35s ease;

  & > polyline {
    pointer-events: none;
  }
}

button.mobile-explorer,
button.desktop-explorer {
  background-color: transparent;
  border: none;
  text-align: left;
  cursor: pointer;
  padding: 0;
  color: var(--dark);
  display: flex;
  align-items: center;

  & h2 {
    font-size: 1rem;
    display: inline-block;
    margin: 0;
  }
}

.explorer-content {
  list-style: none;
  overflow: hidden;
  overflow-y: auto;
  overflow-x: hidden;
  margin-top: 0.5rem;
  max-height: 60vh;
  opacity: 1;
  pointer-events: auto;
  transition:
    max-height 0.32s ease,
    opacity 0.32s ease,
    margin-top 0.32s ease;

  & ul {
    list-style: none;
    margin: 0;
    padding: 0;
    overscroll-behavior: contain;

    & li > a {
      color: var(--dark);
      opacity: 0.75;
      pointer-events: all;

      &.active {
        opacity: 1;
        color: var(--tertiary);
      }
    }
  }

  .folder-outer {
    display: grid;
    grid-template-rows: 0fr;
    transition: grid-template-rows 0.3s ease-in-out;
  }

  .folder-outer.open {
    grid-template-rows: 1fr;
  }

  .folder-outer > ul {
    overflow: hidden;
    margin-left: 6px;
    padding-left: 0.8rem;
    border-left: 1px solid var(--lightgray);
  }
}

.folder-container {
  display: flex;
  flex-direction: row;
  align-items: center;
  user-select: none;

  & div > a {
    color: var(--secondary);
    font-family: var(--headerFont);
    font-size: 0.95rem;
    font-weight: $semiBoldWeight;
    line-height: 1.5rem;
    display: inline-block;
  }

  & div > a:hover {
    color: var(--tertiary);
  }

  & div > button {
    color: var(--dark);
    background-color: transparent;
    border: none;
    text-align: left;
    cursor: pointer;
    padding-left: 0;
    padding-right: 0;
    display: flex;
    align-items: center;
    font-family: var(--headerFont);

    & span {
      font-size: 0.95rem;
      display: inline-block;
      color: var(--secondary);
      font-weight: $semiBoldWeight;
      margin: 0;
      line-height: 1.5rem;
      pointer-events: none;
    }
  }
}

.folder-icon {
  margin-right: 5px;
  color: var(--secondary);
  cursor: pointer;
  transition: transform 0.3s ease;
  backface-visibility: visible;
  flex-shrink: 0;
}

li:has(> .folder-outer:not(.open)) > .folder-container > svg {
  transform: rotate(-90deg);
}

.folder-icon:hover {
  color: var(--tertiary);
}
